#!/bin/bash

#
# This script finds and classifies JBoss AS instances by specific community and
# enterprise releases.
# 
# Classification is simple: search for jboss-modules.jar and run.jar files and
# then extract the version from the pom.properties and MANIFEST.MF,
# respectively, to determine which distribution contained the jar
#

# abort if error
set -e

# default arguments for the scanning module
WorkDir=/tmp
ClassificationFile=jboss-classifier.txt
SearchRoot=${HOME}/demo/ansible-scanner

# get the arguments from ansible
# this is potentially dangerous as arbitrary command execution can occur
#source ${1}

# switch to scratch directory
pushd ${WorkDir} 2>&1 > /dev/null

  # populate the classifier file to match the jboss release
  #
  # this file is simply formatted as:
  # release-name ':' version-string [version-string [version-string ... ]]
  #
  # where version-string refers to the jboss-modules.jar version or the
  # Implementation-Version in the run.jar MANIFEST.MF file.
  #
  # there can be multiple versions if jboss-modules.jar was patched
  #
  cat > ${ClassificationFile} <<EOF1
JBossAS 5.0.0: JBoss_5_0_0_GA
JBossAS 5.0.1: JBoss_5_0_1_GA
JBossAS 5.1.0: JBoss_5_1_0_GA
JBossAS 6.0.0: JBoss_6.0.0.Final
JBossAS 6.1.0: JBoss_6.1.0.Final
JBossAS 7.0.0: 1.0.1.GA
JBossAS 7.0.1: 1.0.1.GA
JBossAS 7.0.2: 1.0.2.GA
JBossAS 7.1.0: 1.1.1.GA
JBossAS 7.1.1: 1.1.1.GA
JBossAS 7.2.0: 1.2.0.CR1
EAP 5.0.0: JBPAPP_5_0_0_GA
EAP 5.0.1: JBPAPP_5_0_1
EAP 5.1.0: JBPAPP_5_1_0
EAP 5.1.1: JBPAPP_5_1_1	
EAP 5.1.2: JBPAPP_5_1_2
EAP 5.2.0: JBPAPP_5_2_0
EAP 6.0.0: 1.1.2.GA-redhat-1
EAP 6.0.1: 1.1.3.GA-redhat-1
EAP 6.1.0: 1.2.0.Final-redhat-1
EAP 6.1.1: 1.2.2.Final-redhat-1
EAP 6.2: 1.3.0.Final-redhat-2 1.3.3.Final-redhat-1
EOF1

  unset RELEASE
  
  # find every occurrence of the modules jar in the filesystem (excluding redundant copies from patching)
  for modjar in `find ${SearchRoot} -type f -name 'jboss-modules.jar' | grep -v '\.installation/patches'`
  do
    jar xf ${modjar} META-INF/maven/org.jboss.modules/jboss-modules/pom.properties
    VERSION=`grep version META-INF/maven/org.jboss.modules/jboss-modules/pom.properties | sed 's/version=//g'`
    FOUND=`grep ${VERSION} ${ClassificationFile} | cut -d':' -f1`

    if [ -z "${FOUND}" ]
    then
      FOUND="Unknown JBoss Release"
    fi

    if [ -z "${RELEASE}" ]
    then
      RELEASE="${FOUND}"
    else
      RELEASE="${RELEASE}, ${FOUND}"
    fi
 
    rm -fr META-INF
  done

  # find every occurrence of the run jar in the filesystem
  for runjar in `find ${SearchRoot} -type f -name 'run.jar'`
  do
    jar xf ${runjar} META-INF/MANIFEST.MF
    VERSION=`grep Implementation-Version META-INF/MANIFEST.MF | sed 's/..*SVNTag.//g' | cut -d' ' -f1`
    FOUND=`grep ${VERSION} ${ClassificationFile} | cut -d':' -f1`

    if [ -z "${FOUND}" ]
    then
      FOUND="Unknown JBoss Release"
    fi

    if [ -z "${RELEASE}" ]
    then
      RELEASE="${FOUND}"
    else
      RELEASE="${RELEASE}, ${FOUND}"
    fi

    rm -fr META-INF
  done

  rm -f ${ClassificationFile}

popd 2>&1 > /dev/null

echo -n "hostname=`hostname` "
echo -n "cores=`grep 'core id' /proc/cpuinfo | sort -u | wc -l` "
echo "release=\"${RELEASE}\" changed=False"
exit 0
