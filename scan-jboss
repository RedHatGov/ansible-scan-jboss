#!/bin/bash

#
# classification is simple, search for jboss-modules.jar files and
# then extract the version from the pom.properties to determine
# which distribution contained the jar
#

# abort if error
set -e

# default arguments for the scanning module
WorkDir=/tmp
ClassificationFile=jboss-classifier.txt
SearchRoot=/

# get the arguments from ansible
# this is potentially dangerous as arbitrary command execution can occur
source ${1}

# switch to scratch directory
pushd ${WorkDir} 2>&1 > /dev/null

  # populate the classifier file to match the jboss release
  #
  # this file is simply formatted as:
  # release-name ':' version-string [version-string [version-string ... ]]
  #
  # where version-string refers to the jboss-modules.jar version
  # there can be multiple versions if jboss-modules.jar was patched
  #
  cat > ${ClassificationFile} <<EOF1
JBossAS 7.1.1: 1.1.1.GA
JBossAS 7.2.0: 1.2.0.CR1
EAP 6.0.0: 1.1.2.GA-redhat-1
EAP 6.0.1: 1.1.3.GA-redhat-1
EAP 6.1.0: 1.2.0.Final-redhat-1
EAP 6.1.1: 1.2.2.Final-redhat-1
EAP 6.2.0: 1.3.0.Final-redhat-2
EOF1

  unset RELEASE
  
  # find every occurrence of the modules jar in the filesystem
  for modjar in `find ${SearchRoot} -type f -name 'jboss-modules.jar'`
  do
    jar xf ${modjar} META-INF/maven/org.jboss.modules/jboss-modules/pom.properties
    VERSION=`grep version META-INF/maven/org.jboss.modules/jboss-modules/pom.properties | sed 's/version=//g'`
    FOUND=`grep ${VERSION} ${ClassificationFile} | cut -d':' -f1`

    if [ -z "${FOUND}" ]
    then
      FOUND="Unknown JBoss Release"
    fi

    if [ -z "${RELEASE}" ]
    then
      RELEASE="${FOUND}"
    else
      RELEASE="${RELEASE}, ${FOUND}"
    fi
 
    rm -fr META-INF
  done
  
  rm -f ${ClassificationFile}

popd 2>&1 > /dev/null

echo "release=\"${RELEASE}\" changed=False"
exit 0
